---
import { useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { isPreview } from "../utils";
import generateStaticPaths from "@/utils/generateStaticPaths";
import '@/styles/_globals.less';

const sbApi = useStoryblokApi();

export async function getStaticPaths() {
  const sbApi = useStoryblokApi();
  const { data } = await sbApi.get("cdn/links", {
    version: "draft",
  });
  let links = data.links;
  links = Object.values(links);

  return links.map((link) => {
    return {
      params: { slug: link.slug },
    };
  });
}

const { slug } = Astro.params;

const { data } = await sbApi.get(`cdn/stories/${slug}`, {
  version: "draft",
});

const story = data.story;
---

<BaseLayout>
  <StoryblokComponent blok={story.content} />
</BaseLayout>


// export async function getStaticPaths() {
//   return await generateStaticPaths();
// }

// const { slug, language, langSwitch } = Astro.props;

// const storyblokApi = useStoryblokApi();

// let story = null;

// try {
//   const { data } = await storyblokApi.get(`cdn/stories/${slug === undefined ? "home" : slug}`, {
//     version: isPreview() ? "draft" : "published",
//     resolve_relations: "featured-links.test_links",
//     resolve_links: "url",
//     language,
//   });

//   story = data.story;
// } catch (error) {
//   console.error("Page not found:", error);
// }
// ---

// <BaseLayout langSwitch={langSwitch} language={language} story={story}>
//   {story ? (
//     <StoryblokComponent language={language} blok={story.content} />
//   ) : (
//     <div>
//       <p>Page not found</p>
//     </div>
//   )}
// </BaseLayout>
